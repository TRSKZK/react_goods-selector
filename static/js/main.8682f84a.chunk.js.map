{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","active","toggleClass","setState","prevState","addGood","good","deleteGood","filter","element","showSelectedGoods","multipleItemsEnding","lastItem","slice","length","join","className","this","type","onClick","map","classNames","green","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQIC,E,4MACJC,MAAiB,CACfC,cAAe,GACfC,QAAQ,G,EAGVC,YAAc,WACZ,EAAKC,UAAS,SAACC,GACb,MAAO,CACLH,QAASG,EAAUH,Y,EAKzBI,QAAU,SAACC,GACT,EAAKH,UAAS,SAACC,GACb,MAAO,CACLJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BM,S,EAKlDC,WAAa,SAACD,GACZ,EAAKH,UAAS,SAACC,GACb,MAAO,CACLJ,cAAeI,EAAUJ,cACtBQ,QAAO,SAACC,GAAD,OAAoBA,IAAYH,U,EAKhDI,kBAAoB,WAClB,IAAQV,EAAkB,EAAKD,MAAvBC,cACFW,EAAsB,eACtBC,EAAWZ,EAAca,OAAO,GAEtC,OAA6B,IAAzBb,EAAcc,OACV,GAAN,OAAUd,EAAc,GAAxB,gBAG2B,IAAzBA,EAAcc,OACV,GAAN,OAAUd,EAAc,GAAxB,gBAAkCA,EAAc,GAAhD,YAAsDW,GAGlD,GAAN,OAAUX,EAAca,MAAM,GAAI,GAAGE,KAAK,MAA1C,wBACQH,EADR,YACoBD,I,4CAGtB,WAAU,IAAD,OACP,OACE,sBAAKK,UAAU,MAAf,UACE,6BACuC,IAApCC,KAAKlB,MAAMC,cAAcc,OACtB,oBACAG,KAAKP,sBAE0B,IAApCO,KAAKlB,MAAMC,cAAcc,OACtB,KAEA,wBACEI,KAAK,SACLC,QAAS,kBAAM,EAAKhB,SAAS,CAAEH,cAAe,MAFhD,eAOJ,oBAAIgB,UAAU,OAAd,SACGnB,EAAgBuB,KAAI,SAACd,GAAD,OACnB,qBAAeU,UAAU,aAAzB,UACE,sBACEA,UAAWK,IAAW,sBAAuB,CAC3CC,MAAO,EAAKvB,MAAMC,cAAcuB,SAASjB,KAF7C,SAKGA,IAEH,qBAAKU,UAAU,gCAAf,SACG,EAAKjB,MAAMC,cAAcuB,SAASjB,GAE/B,wBACEU,UAAU,SACVE,KAAK,SACLC,QAAS,kBAAM,EAAKZ,WAAWD,IAHjC,oBASA,wBACEU,UAAU,SACVE,KAAK,SACLC,QAAS,kBAAM,EAAKd,QAAQC,IAH9B,qBApBCA,e,GApEHkB,IAAMC,WAyGT3B,IC5Hf4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8682f84a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype AppState = {\n  selectedGoods: string[],\n  active: boolean,\n};\n\nclass App extends React.Component<{}, AppState> {\n  state:AppState = {\n    selectedGoods: [],\n    active: false,\n  };\n\n  toggleClass = () => {\n    this.setState((prevState) => {\n      return {\n        active: !prevState.active,\n      };\n    });\n  };\n\n  addGood = (good:string) => {\n    this.setState((prevState) => {\n      return {\n        selectedGoods: [...prevState.selectedGoods, good],\n      };\n    });\n  };\n\n  deleteGood = (good:string) => {\n    this.setState((prevState) => {\n      return {\n        selectedGoods: prevState.selectedGoods\n          .filter((element:string) => element !== good),\n      };\n    });\n  };\n\n  showSelectedGoods = () => {\n    const { selectedGoods } = this.state;\n    const multipleItemsEnding = 'are selected';\n    const lastItem = selectedGoods.slice(-1);\n\n    if (selectedGoods.length === 1) {\n      return `${selectedGoods[0]} is selected`;\n    }\n\n    if (selectedGoods.length === 2) {\n      return `${selectedGoods[0]} and ${selectedGoods[1]} ${multipleItemsEnding}`;\n    }\n\n    return `${selectedGoods.slice(0, -1).join(', ')} \n      and ${lastItem} ${multipleItemsEnding}`;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          {this.state.selectedGoods.length === 0\n            ? 'No goods selected'\n            : this.showSelectedGoods()}\n        </h1>\n        {this.state.selectedGoods.length === 0\n          ? null\n          : (\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ selectedGoods: [] })}\n            >\n              X\n            </button>\n          )}\n        <ul className=\"list\">\n          {goodsFromServer.map((good:string) => (\n            <li key={good} className=\"list__item\">\n              <span\n                className={classNames('list__item--product', {\n                  green: this.state.selectedGoods.includes(good),\n                })}\n              >\n                {good}\n              </span>\n              <div className=\"list__item--buttons-container\">\n                {this.state.selectedGoods.includes(good)\n                  ? (\n                    <button\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => this.deleteGood(good)}\n                    >\n                      Remove\n                    </button>\n                  )\n                  : (\n                    <button\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => this.addGood(good)}\n                    >\n                      Add\n                    </button>\n                  )}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}